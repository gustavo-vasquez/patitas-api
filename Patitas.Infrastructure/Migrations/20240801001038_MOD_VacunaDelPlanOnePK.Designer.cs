// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Patitas.Infrastructure;

#nullable disable

namespace Patitas.Infrastructure.Migrations
{
    [DbContext(typeof(PatitasContext))]
    [Migration("20240801001038_MOD_VacunaDelPlanOnePK")]
    partial class MOD_VacunaDelPlanOnePK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Patitas.Domain.Entities.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("EsFundador")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Adoptante", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("DNI")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Adoptantes");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<string>("DescripcionAdicional")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Desparasitado")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaAdoptado")
                        .HasColumnType("bit");

                    b.Property<bool>("Esterilizado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaAdopcion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fotografia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Id_Raza")
                        .HasColumnType("int");

                    b.Property<int>("Id_Refugio")
                        .HasColumnType("int");

                    b.Property<int>("Nacimiento")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<string>("SituacionPrevia")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Raza");

                    b.HasIndex("Id_Refugio");

                    b.ToTable("Animales");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.AnimalVacuna", b =>
                {
                    b.Property<int>("Id_Animal")
                        .HasColumnType("int");

                    b.Property<int>("Id_Vacuna")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeAplicacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FueParteDeAdopcion")
                        .HasColumnType("bit");

                    b.Property<int>("NroDosisAplicada")
                        .HasColumnType("int");

                    b.HasKey("Id_Animal", "Id_Vacuna");

                    b.HasIndex("Id_Vacuna");

                    b.ToTable("AnimalVacuna");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Barrio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Barrios");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.CancelacionDeAdopcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaDeCancelacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Solicitud")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Solicitud");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("CancelacionesDeAdopcion");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.CausaDeDenuncia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CausasDeDenuncia");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Adoptante")
                        .HasColumnType("int");

                    b.Property<int>("Id_Refugio")
                        .HasColumnType("int");

                    b.Property<byte>("Nro_Estrellas")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("Id_Adoptante");

                    b.HasIndex("Id_Refugio");

                    b.HasIndex("Nro_Estrellas");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Denuncia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionAdicional")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_CausaDeDenuncia")
                        .HasColumnType("int");

                    b.Property<int>("Id_Publicacion")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_CausaDeDenuncia");

                    b.HasIndex("Id_Publicacion");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Denuncias");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.DetalleEstrella", b =>
                {
                    b.Property<byte>("NroEstrella")
                        .HasColumnType("tinyint");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NroEstrella");

                    b.ToTable("DetalleEstrellas");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Especie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Especies");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.EspecieVacuna", b =>
                {
                    b.Property<int>("Id_Especie")
                        .HasColumnType("int");

                    b.Property<int>("Id_Vacuna")
                        .HasColumnType("int");

                    b.HasKey("Id_Especie", "Id_Vacuna");

                    b.HasIndex("Id_Vacuna");

                    b.ToTable("EspecieVacuna");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.FormularioPreAdopcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("CantidadDeAmbientes")
                        .HasColumnType("tinyint");

                    b.Property<bool>("ConoceLeyDeMaltratoAnimal")
                        .HasColumnType("bit");

                    b.Property<string>("DescripcionMascotas")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FrecuenciaAnimalSolo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id_Adoptante")
                        .HasColumnType("int");

                    b.Property<int>("Id_SolicitudDeAdopcion")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("TieneBalcon")
                        .HasColumnType("bit");

                    b.Property<bool>("TieneConocidosEnCasoDeEmergencia")
                        .HasColumnType("bit");

                    b.Property<bool>("TieneConocidosQueLoAconsejen")
                        .HasColumnType("bit");

                    b.Property<bool>("TieneMascotas")
                        .HasColumnType("bit");

                    b.Property<bool>("TienePatio")
                        .HasColumnType("bit");

                    b.Property<bool>("TieneRedEnVentanas")
                        .HasColumnType("bit");

                    b.Property<bool>("TieneSalarioAcordeAGastos")
                        .HasColumnType("bit");

                    b.Property<bool>("TieneVeterinariaCerca")
                        .HasColumnType("bit");

                    b.Property<bool>("TuvoMascota")
                        .HasColumnType("bit");

                    b.Property<bool>("ViveEnCasa")
                        .HasColumnType("bit");

                    b.Property<bool>("ViveEnDepartamento")
                        .HasColumnType("bit");

                    b.Property<bool>("ViveSolo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Id_Adoptante");

                    b.HasIndex("Id_SolicitudDeAdopcion")
                        .IsUnique();

                    b.ToTable("FormulariosPreAdopcion");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.ModeracionDePublicacion", b =>
                {
                    b.Property<int>("Id_Publicacion")
                        .HasColumnType("int");

                    b.Property<int>("Id_Administrador")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FueEditado")
                        .HasColumnType("bit");

                    b.Property<bool>("FueEliminado")
                        .HasColumnType("bit");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id_Publicacion", "Id_Administrador");

                    b.HasIndex("Id_Administrador");

                    b.ToTable("ModeracionDePublicaciones");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.PlanDeVacunacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completado")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCompletado")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_SolicitudDeAdopcion")
                        .HasColumnType("int");

                    b.Property<int>("Id_Veterinaria")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_SolicitudDeAdopcion")
                        .IsUnique();

                    b.HasIndex("Id_Veterinaria");

                    b.ToTable("PlanesDeVacunacion");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Publicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EditadoPorAdministrador")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEdicion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Tema")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<int?>("RespondeA_IdPublicacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Tema");

                    b.HasIndex("Id_Usuario");

                    b.HasIndex("RespondeA_IdPublicacion");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Raza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Especie")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Especie");

                    b.ToTable("Razas");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Refugio", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ApellidoResponsable")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DiasDeAtencion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fotografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorarioApertura")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("HorarioCierre")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreResponsable")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SitioWeb")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Refugios");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.SeguimientoDeVacunacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaAplicada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAsignada")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_SolicitudDeAdopcion")
                        .HasColumnType("int");

                    b.Property<int>("Id_Vacuna")
                        .HasColumnType("int");

                    b.Property<int>("Id_Veterinaria")
                        .HasColumnType("int");

                    b.Property<string>("MotivoDeReprogramacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte>("NroDosis")
                        .HasColumnType("tinyint");

                    b.Property<string>("NroLote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("PorReprogramar")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Id_SolicitudDeAdopcion");

                    b.HasIndex("Id_Vacuna");

                    b.HasIndex("Id_Veterinaria");

                    b.ToTable("SeguimientosDeVacunacion");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.SolicitudDeAdopcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aprobada")
                        .HasColumnType("bit");

                    b.Property<bool>("EnEtapaDeSeguimiento")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Adoptante")
                        .HasColumnType("int");

                    b.Property<int>("Id_Animal")
                        .HasColumnType("int");

                    b.Property<int>("Id_Refugio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Adoptante");

                    b.HasIndex("Id_Animal");

                    b.HasIndex("Id_Refugio");

                    b.ToTable("SolicitudesDeAdopcion");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Temas");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Asistio")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaConfirmado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaProgramada")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Adoptante")
                        .HasColumnType("int");

                    b.Property<int>("Id_Refugio")
                        .HasColumnType("int");

                    b.Property<int>("Id_SolicitudDeAdopcion")
                        .HasColumnType("int");

                    b.Property<string>("InformeDeVisita")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MotivoDeReprogramacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("PorReprogramar")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Id_Adoptante");

                    b.HasIndex("Id_Refugio");

                    b.HasIndex("Id_SolicitudDeAdopcion");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoDePerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Barrio")
                        .HasColumnType("int");

                    b.Property<int>("Id_Rol")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Barrio");

                    b.HasIndex("Id_Rol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Vacuna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadDeDosis")
                        .HasColumnType("int");

                    b.Property<string>("EdadIndicada")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Vacunas");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.VacunaDelPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaDeAplicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_PlanDeVacunacion")
                        .HasColumnType("int");

                    b.Property<int>("Id_Vacuna")
                        .HasColumnType("int");

                    b.Property<byte>("NroDosis")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("Id_PlanDeVacunacion");

                    b.HasIndex("Id_Vacuna");

                    b.ToTable("VacunasDelPlan");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Veterinaria", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DiasDeAtencion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Especialidades")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaFundacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fotografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorarioApertura")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("HorarioCierre")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SitioWeb")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TelefonoAlternativo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Veterinarias");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.VeterinariaAsignadaARefugio", b =>
                {
                    b.Property<int>("Id_Veterinaria")
                        .HasColumnType("int");

                    b.Property<int>("Id_Refugio")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeAsignacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_Veterinaria", "Id_Refugio");

                    b.HasIndex("Id_Refugio");

                    b.ToTable("VeterinariasAsignadasARefugios");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Administrador", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Usuario", "Usuario")
                        .WithOne("Administrador")
                        .HasForeignKey("Patitas.Domain.Entities.Administrador", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Adoptante", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Usuario", "Usuario")
                        .WithOne("Adoptante")
                        .HasForeignKey("Patitas.Domain.Entities.Adoptante", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Animal", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Raza", "Raza")
                        .WithMany("Animales")
                        .HasForeignKey("Id_Raza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Refugio", "Refugio")
                        .WithMany("Animales")
                        .HasForeignKey("Id_Refugio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Raza");

                    b.Navigation("Refugio");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.AnimalVacuna", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Animal", null)
                        .WithMany()
                        .HasForeignKey("Id_Animal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Vacuna", null)
                        .WithMany()
                        .HasForeignKey("Id_Vacuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Patitas.Domain.Entities.CancelacionDeAdopcion", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.SolicitudDeAdopcion", "SolicitudDeAdopcion")
                        .WithMany("CancelacionesDeAdopcion")
                        .HasForeignKey("Id_Solicitud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Usuario", "Usuario")
                        .WithMany("CancelacionesDeAdopcion")
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SolicitudDeAdopcion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Comentario", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Adoptante", "Adoptante")
                        .WithMany("Comentarios")
                        .HasForeignKey("Id_Adoptante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Refugio", "Refugio")
                        .WithMany("Comentarios")
                        .HasForeignKey("Id_Refugio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.DetalleEstrella", "DetalleEstrella")
                        .WithMany("Comentarios")
                        .HasForeignKey("Nro_Estrellas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adoptante");

                    b.Navigation("DetalleEstrella");

                    b.Navigation("Refugio");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Denuncia", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.CausaDeDenuncia", "CausaDeDenuncia")
                        .WithMany("Denuncias")
                        .HasForeignKey("Id_CausaDeDenuncia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Publicacion", "Publicacion")
                        .WithMany("Denuncias")
                        .HasForeignKey("Id_Publicacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Denuncias")
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CausaDeDenuncia");

                    b.Navigation("Publicacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.EspecieVacuna", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Especie", null)
                        .WithMany()
                        .HasForeignKey("Id_Especie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Vacuna", null)
                        .WithMany()
                        .HasForeignKey("Id_Vacuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Patitas.Domain.Entities.FormularioPreAdopcion", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Adoptante", "Adoptante")
                        .WithMany("FormulariosPreAdopcion")
                        .HasForeignKey("Id_Adoptante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.SolicitudDeAdopcion", "SolicitudDeAdopcion")
                        .WithOne("FormularioPreAdopcion")
                        .HasForeignKey("Patitas.Domain.Entities.FormularioPreAdopcion", "Id_SolicitudDeAdopcion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Adoptante");

                    b.Navigation("SolicitudDeAdopcion");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.ModeracionDePublicacion", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Administrador", null)
                        .WithMany()
                        .HasForeignKey("Id_Administrador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Publicacion", null)
                        .WithMany()
                        .HasForeignKey("Id_Publicacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Patitas.Domain.Entities.PlanDeVacunacion", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.SolicitudDeAdopcion", "SolicitudDeAdopcion")
                        .WithOne("PlanDeVacunacion")
                        .HasForeignKey("Patitas.Domain.Entities.PlanDeVacunacion", "Id_SolicitudDeAdopcion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Veterinaria", "Veterinaria")
                        .WithOne("PlanDeVacunacion")
                        .HasForeignKey("Patitas.Domain.Entities.PlanDeVacunacion", "Id_Veterinaria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SolicitudDeAdopcion");

                    b.Navigation("Veterinaria");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Publicacion", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Tema", "Tema")
                        .WithMany("Publicaciones")
                        .HasForeignKey("Id_Tema")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Publicacion", "Respuesta")
                        .WithMany("Respuestas")
                        .HasForeignKey("RespondeA_IdPublicacion");

                    b.Navigation("Respuesta");

                    b.Navigation("Tema");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Raza", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Especie", "Especie")
                        .WithMany("Razas")
                        .HasForeignKey("Id_Especie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Refugio", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Usuario", "Usuario")
                        .WithOne("Refugio")
                        .HasForeignKey("Patitas.Domain.Entities.Refugio", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.SeguimientoDeVacunacion", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.SolicitudDeAdopcion", "SolicitudDeAdopcion")
                        .WithMany("SeguimientosDeVacunacion")
                        .HasForeignKey("Id_SolicitudDeAdopcion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Vacuna", "Vacuna")
                        .WithMany("SeguimientosDeVacunacion")
                        .HasForeignKey("Id_Vacuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Veterinaria", "Veterinaria")
                        .WithMany("SeguimientosDeVacunacion")
                        .HasForeignKey("Id_Veterinaria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SolicitudDeAdopcion");

                    b.Navigation("Vacuna");

                    b.Navigation("Veterinaria");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.SolicitudDeAdopcion", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Adoptante", "Adoptante")
                        .WithMany("SolicitudesDeAdopcion")
                        .HasForeignKey("Id_Adoptante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Animal", "Animal")
                        .WithMany("SolicitudesDeAdopcion")
                        .HasForeignKey("Id_Animal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Refugio", "Refugio")
                        .WithMany("SolicitudesDeAdopcion")
                        .HasForeignKey("Id_Refugio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Adoptante");

                    b.Navigation("Animal");

                    b.Navigation("Refugio");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Turno", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Adoptante", "Adoptante")
                        .WithMany("Turnos")
                        .HasForeignKey("Id_Adoptante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Refugio", "Refugio")
                        .WithMany("Turnos")
                        .HasForeignKey("Id_Refugio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.SolicitudDeAdopcion", "SolicitudDeAdopcion")
                        .WithMany("Turnos")
                        .HasForeignKey("Id_SolicitudDeAdopcion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Adoptante");

                    b.Navigation("Refugio");

                    b.Navigation("SolicitudDeAdopcion");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Barrio", "Barrio")
                        .WithMany("Usuarios")
                        .HasForeignKey("Id_Barrio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Rol", "RolUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("Id_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barrio");

                    b.Navigation("RolUsuario");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.VacunaDelPlan", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.PlanDeVacunacion", "PlanDeVacunacion")
                        .WithMany("VacunasDelPlan")
                        .HasForeignKey("Id_PlanDeVacunacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Vacuna", "Vacuna")
                        .WithMany("VacunasDelPlan")
                        .HasForeignKey("Id_Vacuna")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanDeVacunacion");

                    b.Navigation("Vacuna");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Veterinaria", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Usuario", "Usuario")
                        .WithOne("Veterinaria")
                        .HasForeignKey("Patitas.Domain.Entities.Veterinaria", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.VeterinariaAsignadaARefugio", b =>
                {
                    b.HasOne("Patitas.Domain.Entities.Refugio", null)
                        .WithMany()
                        .HasForeignKey("Id_Refugio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Patitas.Domain.Entities.Veterinaria", null)
                        .WithMany()
                        .HasForeignKey("Id_Veterinaria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Adoptante", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("FormulariosPreAdopcion");

                    b.Navigation("SolicitudesDeAdopcion");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Animal", b =>
                {
                    b.Navigation("SolicitudesDeAdopcion");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Barrio", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.CausaDeDenuncia", b =>
                {
                    b.Navigation("Denuncias");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.DetalleEstrella", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Especie", b =>
                {
                    b.Navigation("Razas");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.PlanDeVacunacion", b =>
                {
                    b.Navigation("VacunasDelPlan");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Publicacion", b =>
                {
                    b.Navigation("Denuncias");

                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Raza", b =>
                {
                    b.Navigation("Animales");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Refugio", b =>
                {
                    b.Navigation("Animales");

                    b.Navigation("Comentarios");

                    b.Navigation("SolicitudesDeAdopcion");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.SolicitudDeAdopcion", b =>
                {
                    b.Navigation("CancelacionesDeAdopcion");

                    b.Navigation("FormularioPreAdopcion")
                        .IsRequired();

                    b.Navigation("PlanDeVacunacion")
                        .IsRequired();

                    b.Navigation("SeguimientosDeVacunacion");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Tema", b =>
                {
                    b.Navigation("Publicaciones");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Administrador");

                    b.Navigation("Adoptante");

                    b.Navigation("CancelacionesDeAdopcion");

                    b.Navigation("Denuncias");

                    b.Navigation("Refugio");

                    b.Navigation("Veterinaria");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Vacuna", b =>
                {
                    b.Navigation("SeguimientosDeVacunacion");

                    b.Navigation("VacunasDelPlan");
                });

            modelBuilder.Entity("Patitas.Domain.Entities.Veterinaria", b =>
                {
                    b.Navigation("PlanDeVacunacion")
                        .IsRequired();

                    b.Navigation("SeguimientosDeVacunacion");
                });
#pragma warning restore 612, 618
        }
    }
}
